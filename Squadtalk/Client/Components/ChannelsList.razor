@using Squadtalk.Client.Models
@using Squadtalk.Client.Services

<div class="channels">
    <div class="global" @onclick="() => ChannelManager.SelectGlobal()">
        <svg viewBox="0 0 512 512" class="icon" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
            <path d="M256.002,7c-0.068,0-0.137,0-0.213,0c-0.029,0-0.061,0-0.098,0c-0.098,0-0.195,0.02-0.293,0.02  C118.146,7.331,7,118.68,7,256c0,137.281,111.146,248.65,248.398,248.98c0.098,0,0.195,0.02,0.293,0.02c0.037,0,0.068,0,0.098,0  c0.076,0,0.145,0,0.213,0C393.494,505,505,393.494,505,256C505,118.486,393.494,7,256.002,7z M265.957,156.011  c26.398-0.72,52.096-4.202,76.82-10.232c7.471,29.355,12.082,63.184,12.82,100.261h-89.641V156.011z M265.957,136.091V28.496  c26.865,7.431,54.061,43.225,71.395,98.122C314.357,132.161,290.488,135.391,265.957,136.091z M246.042,28.262v107.829  c-24.724-0.7-48.789-3.988-71.967-9.629C191.553,71.234,219.012,35.304,246.042,28.262z M246.042,155.991v90.048h-90.253  c0.729-37.136,5.369-71.004,12.829-100.378C193.547,151.75,219.43,155.291,246.042,155.991z M135.742,246.04H27.173  c2.198-51.2,21.272-98.121,51.813-135.277c22.177,12.217,45.706,22.216,70.354,29.686  C141.296,172.215,136.471,208.028,135.742,246.04z M135.742,265.96c0.729,37.992,5.554,73.805,13.599,105.572  c-24.639,7.489-48.177,17.488-70.354,29.704c-30.541-37.155-49.615-84.075-51.813-135.276H135.742z M155.789,265.96h90.253v89.932  c-26.611,0.7-52.504,4.261-77.433,10.368C161.148,336.906,156.518,303.058,155.789,265.96z M246.042,375.792v107.946  c-27.049-7.062-54.527-43.031-71.996-98.317C197.233,379.78,221.307,376.493,246.042,375.792z M265.957,483.504V375.792  c24.531,0.701,48.4,3.949,71.414,9.493C320.037,440.221,292.822,476.073,265.957,483.504z M265.957,355.892V265.96h89.641  c-0.738,37.038-5.35,70.828-12.781,100.164C318.053,360.093,292.375,356.592,265.957,355.892z M375.635,265.96h109.191  c-2.197,51.201-21.262,98.103-51.803,135.258c-22.354-12.295-46.086-22.371-70.947-29.88  C370.109,339.609,374.914,303.874,375.635,265.96z M375.635,246.04c-0.721-37.972-5.545-73.727-13.578-105.475  c24.842-7.509,48.576-17.566,70.908-29.86c30.58,37.155,49.664,84.096,51.861,135.335H375.635z M419.25,95.492  c-19.822,10.543-40.736,19.258-62.582,25.873c-11.652-37.467-27.994-68.047-47.33-88.123  C351.746,43.417,389.621,65.359,419.25,95.492z M201.874,33.437c-19.23,20.037-35.502,50.481-47.106,87.753  c-21.633-6.595-42.37-15.232-62.007-25.698C122.192,65.554,159.777,43.669,201.874,33.437z M92.692,416.43  c19.657-10.485,40.404-19.122,62.056-25.717c11.604,37.311,27.876,67.794,47.125,87.85  C159.748,468.312,122.144,446.407,92.692,416.43z M309.338,478.738c19.357-20.076,35.697-50.676,47.35-88.201  c21.865,6.635,42.797,15.33,62.621,25.912C389.68,446.602,351.785,468.583,309.338,478.738z" />
        </svg>
        Global
    </div>
    
    @if (Template is not null)
    {
        foreach (var user in UserService.Users)
        {
            @Template(user)
        }
    }
</div>

@implements IDisposable
@inject UserService UserService
@inject ChannelManager ChannelManager

@code {
    [Parameter] public RenderFragment<UserModel>? Template { get; set; }

    protected override void OnInitialized()
    {
        UserService.UserListChanged += StateHasChanged;
    }

    public void Dispose()
    {
        UserService.UserListChanged -= StateHasChanged;
    }
}